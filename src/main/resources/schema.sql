CREATE TABLE IF NOT EXISTS users (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email VARCHAR NOT NULL,
  login VARCHAR NOT NULL,
  name VARCHAR,
  birthday DATE
);

CREATE TABLE IF NOT EXISTS films (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  title VARCHAR NOT NULL,
  description VARCHAR NOT NULL,
  release_date DATE,
  duration INTEGER NOT NULL,
  mpa_id INTEGER
);

CREATE TABLE IF NOT EXISTS genre (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS film_genres (
 film_id INTEGER,
 genre_id INTEGER,
 CONSTRAINT pk_film_genres PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS mpa (
 id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
 name VARCHAR NOT NULL
);

CREATE TABLE IF NOT EXISTS friend_list (
 user_id INTEGER,
 friend_id INTEGER,
 state BOOLEAN,
 CONSTRAINT pk_friend_list PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS likes (
 user_id INTEGER,
 film_id INTEGER,
 CONSTRAINT pk_likes PRIMARY KEY (user_id, film_id)

);

ALTER TABLE film_genres ADD FOREIGN KEY (genre_id) REFERENCES genre (id) ON DELETE CASCADE;

ALTER TABLE film_genres ADD FOREIGN KEY (film_id) REFERENCES films (id) ON DELETE CASCADE;

ALTER TABLE films ADD FOREIGN KEY (mpa_id) REFERENCES mpa (id) ON DELETE CASCADE;

ALTER TABLE friend_list ADD CONSTRAINT fk_friend_list_user FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE;

ALTER TABLE friend_list ADD CONSTRAINT fk_friend_list_friend FOREIGN KEY (friend_id) REFERENCES users (id) ON DELETE CASCADE;

ALTER TABLE likes ADD FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE;

ALTER TABLE likes ADD FOREIGN KEY (film_id) REFERENCES films (id) ON DELETE CASCADE;
